// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalProject.Models;

#nullable disable

namespace finalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241210213248_UserIDFK")]
    partial class UserIDFK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Defense = 300,
                            Health = 300,
                            Name = "Drone",
                            Speed = 400,
                            Strength = 500,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Defense = 200,
                            Health = 300,
                            Name = "Flight",
                            Speed = 350,
                            Strength = 400,
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("finalProject.Models.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Awarded for winning 10 battles",
                            Name = "Champion",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Awarded for playing 50 battles",
                            Name = "Veteran",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("finalProject.Models.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BattleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Team1Id")
                        .HasColumnType("int");

                    b.Property<int>("Team2Id")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerTeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.HasIndex("WinnerTeamId");

                    b.ToTable("Battles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BattleDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Id = 1,
                            Team2Id = 2
                        },
                        new
                        {
                            Id = 2,
                            BattleDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Id = 2,
                            Team2Id = 1
                        });
                });

            modelBuilder.Entity("finalProject.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Moves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Name = "Laser Beam",
                            Power = 500
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Name = "Sky Strike",
                            Power = 600
                        });
                });

            modelBuilder.Entity("finalProject.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalWins")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A team",
                            Name = "Madrid",
                            TotalWins = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "A team",
                            Name = "Barcelona",
                            TotalWins = 8,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("finalProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("TotalWins")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            TotalWins = 15,
                            Username = "JohnDoe"
                        },
                        new
                        {
                            UserId = 2,
                            TotalWins = 20,
                            Username = "JaneDoe"
                        });
                });

            modelBuilder.Entity("Leaderboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<DateTime>("SnapshotDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalWins")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Leaderboards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rank = 1,
                            SnapshotDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalWins = 15,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Rank = 2,
                            SnapshotDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalWins = 20,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.HasOne("finalProject.Models.Team", "Team")
                        .WithMany("Characters")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("finalProject.Models.Badge", b =>
                {
                    b.HasOne("finalProject.Models.User", "User")
                        .WithMany("Badges")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("finalProject.Models.Battle", b =>
                {
                    b.HasOne("finalProject.Models.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("finalProject.Models.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("finalProject.Models.Team", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Team1");

                    b.Navigation("Team2");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("finalProject.Models.Move", b =>
                {
                    b.HasOne("Character", "Character")
                        .WithMany("Moves")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("finalProject.Models.Team", b =>
                {
                    b.HasOne("finalProject.Models.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Leaderboard", b =>
                {
                    b.HasOne("finalProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("finalProject.Models.Team", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("finalProject.Models.User", b =>
                {
                    b.Navigation("Badges");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
